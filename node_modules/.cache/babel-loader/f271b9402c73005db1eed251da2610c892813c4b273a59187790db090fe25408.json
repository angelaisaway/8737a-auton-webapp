{"ast":null,"code":"var _jsxFileName = \"/Users/angelajiang/vex-auton-tool2/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport \"./App.css\";\nimport { generateEZTemplateAuton } from \"./components/ezlogic.js\";\nimport Field from \"./components/field.js\";\nimport Inputs from \"./components/inputs.js\";\nimport CodeOutput from \"./components/codeoutput.js\";\nimport Subsystems from \"./components/subsystems.js\";\n\n//helper for \"actions\" object\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultActions = () => ({\n  intake: false,\n  outtake: false,\n  stopIntake: false,\n  descore: false,\n  wait: 0,\n  pneumatics: null,\n  // \"high\" | \"low\" | null\n  hoardMotors: false,\n  ramDescore: false,\n  slew: null // number | null\n});\nfunction App() {\n  _s();\n  const [rotation, setRotation] = useState(0); // 0 for no rotation, 90 for blue alliance, 270 for red alliance\n  const [points, setPoints] = useState([]); // array of points with {x, y, rawX, rawY, heading, direction}\n  const [offsets, setOffsets] = useState({\n    //distances from rotational center to robot edges, makes placeholder rectangle\n    left: \"\",\n    right: \"\",\n    back: \"\",\n    front: \"\"\n  });\n  const [currentHeading, setCurrentHeading] = useState(0); // array for point headings\n  const [currentDirection, setCurrentDirection] = useState(1); // \"fwd\" or \"rev\" for forward or reverse direction\n  const [selectedPointIndex, setSelectedPointIndex] = useState(null);\n  //refs to track dragging state\n  const draggingPointIndex = useRef(null);\n  const isDragging = useRef(false); //currently dragging a point\n  const wasDragging = useRef(false); //when wasDragging is true, it means a user was dragging a point, so the next click should not add a point\n\n  //constants for field size and scale\n  const fieldSizeInches = 144;\n  const fieldImagePixels = 600;\n  const scale = fieldSizeInches / fieldImagePixels;\n\n  //used to prevent double clicks from adding points instead of deleting\n  const clickTimeout = useRef(null);\n  useEffect(() => {\n    const stored = localStorage.getItem(\"points\");\n    if (stored) {\n      setPoints(JSON.parse(stored));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"points\", JSON.stringify(points));\n  }, [points]);\n\n  // updates offsets on input change\n  const handleOffsetChange = e => {\n    const {\n      name,\n      value\n    } = e.target; //gets label (left, right, back, front) and value from input\n    setOffsets(prev => ({\n      ...prev,\n      //copies previous offsets\n      [name]: value === \"\" ? \"\" : parseFloat(value)\n      //the name becomes the key\n      //if the input is empty, set to empty string\n      //otherwise parse the value to a float\n    }));\n  };\n\n  //if the user clicks on a point, start dragging it\n  //handleMouseDown = click on an already existing point\n  const handleMouseDown = index => {\n    draggingPointIndex.current = index; //index = index of point clicked from points array\n    isDragging.current = true;\n    wasDragging.current = false;\n  };\n\n  //when user moves a point\n  const handleMouseMove = e => {\n    if (!isDragging.current || draggingPointIndex.current === null) return;\n    //if not currently dragging or no point has been dragged, ignore\n    wasDragging.current = true;\n    //else set wasDragging to true so next click does not add a point\n\n    const container = e.currentTarget; //e.currentTarget is the point currently being dragged\n    const rect = container.getBoundingClientRect(); //info about the container's pos and size\n\n    let rawX = e.clientX - rect.left; //how far the mouse is from the left edge of the image\n    let rawY = e.clientY - rect.top; //how far the mouse is from the top edge of the image\n\n    //clamp rawX and rawY to be within the image bounds\n    rawX = Math.max(0, Math.min(rawX, rect.width));\n    rawY = Math.max(0, Math.min(rawY, rect.height));\n\n    //sets center of the field as (0, 0), converts from pixels to inches\n    const dx = (rawX - rect.width / 2) * scale;\n    const dy = (rawY - rect.height / 2) * scale;\n\n    //checks that robot placeholder is fully inside field\n    const robotLeft = dx - offsets.left;\n    const robotRight = dx + offsets.right;\n    const robotBack = -dy - offsets.back;\n    const robotFront = -dy + offsets.front;\n    if (robotLeft < -72 || robotRight > 72 || robotBack < -72 || robotFront > 72) {\n      //if its outside, ignore\n      return;\n    }\n    const updated = [...points]; //create a copy of points array to update\n    updated[draggingPointIndex.current] = {\n      //at the index of the point being dragged\n      ...updated[draggingPointIndex.current],\n      //store existing properties\n      x: dx,\n      //also stores coordinates in inches\n      y: -dy,\n      //negative y because dy is distance from top, so it becomes more positive as you go down\n      //used for labeling on ui\n      rawX,\n      //raw coords for displaying on field\n      rawY\n    };\n    setPoints(updated);\n  };\n\n  // Mouse up - finish dragging\n  const handleMouseUp = () => {\n    draggingPointIndex.current = null;\n    setTimeout(() => {\n      isDragging.current = false;\n      wasDragging.current = false;\n    }, 10);\n  };\n\n  // Double click to delete point\n  const handleDoubleClick = index => {\n    if (clickTimeout.current) {\n      clearTimeout(clickTimeout.current);\n      clickTimeout.current = null;\n    }\n    setPoints(points.filter((_, i) => i !== index));\n  };\n\n  // Click on empty field to add a point (only if not dragging)\n  const handleClick = e => {\n    if (wasDragging.current) return;\n    if (clickTimeout.current) return;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const rawX = e.clientX - rect.left;\n    const rawY = e.clientY - rect.top;\n    clickTimeout.current = setTimeout(() => {\n      clickTimeout.current = null;\n\n      // Out of bounds, ignore\n      if (rawX < 0 || rawY < 0 || rawX > rect.width || rawY > rect.height) return;\n      const dx = (rawX - rect.width / 2) * scale;\n      const dy = (rawY - rect.height / 2) * scale;\n\n      // Check robot bounds with offsets\n      const robotLeft = dx - offsets.left;\n      const robotRight = dx + offsets.right;\n      const robotBack = -dy - offsets.back;\n      const robotFront = -dy + offsets.front;\n      if (robotLeft < -72 || robotRight > 72 || robotBack < -72 || robotFront > 72) return;\n      setPoints([...points, {\n        x: dx,\n        y: -dy,\n        rawX,\n        rawY,\n        heading: currentHeading,\n        direction: currentDirection,\n        offsets,\n        actions: defaultActions()\n      }]);\n    }, 200);\n  };\n\n  // Heading input change\n  const handleHeadingChange = e => {\n    const newHeading = parseFloat(e.target.value) || 0;\n    setCurrentHeading(newHeading);\n    if (points.length > 0) {\n      const updated = [...points];\n      updated[points.length - 1] = {\n        ...updated[points.length - 1],\n        heading: newHeading\n      };\n      setPoints(updated);\n    }\n  };\n\n  // Direction input change\n  const handleDirectionChange = e => {\n    const newDirection = e.target.value; // string \"fwd\" or \"rev\"\n    setCurrentDirection(newDirection);\n    if (points.length > 0) {\n      const updated = [...points];\n      updated[points.length - 1] = {\n        ...updated[points.length - 1],\n        direction: newDirection\n      };\n      setPoints(updated);\n    }\n  };\n  const handleContextMenu = (e, index) => {\n    e.preventDefault(); // stop the right-click menu\n    setSelectedPointIndex(index);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      userSelect: \"none\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"vex auton tool\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Inputs, {\n      rotation: rotation,\n      setRotation: setRotation,\n      setPoints: setPoints,\n      offsets: offsets,\n      handleOffsetChange: handleOffsetChange,\n      currentHeading: currentHeading,\n      handleHeadingChange: handleHeadingChange,\n      currentDirection: currentDirection,\n      handleDirectionChange: handleDirectionChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          const blob = new Blob([JSON.stringify(points, null, 2)], {\n            type: \"application/json\"\n          });\n          const url = URL.createObjectURL(blob);\n          const link = document.createElement(\"a\");\n          link.href = url;\n          link.download = \"points.json\";\n          link.click();\n          URL.revokeObjectURL(url);\n        },\n        children: \"Export JSON\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".json\",\n        onChange: e => {\n          const file = e.target.files[0];\n          if (!file) return;\n          const reader = new FileReader();\n          reader.onload = event => {\n            try {\n              const loadedPoints = JSON.parse(event.target.result);\n              if (Array.isArray(loadedPoints)) {\n                setPoints(loadedPoints);\n              } else {\n                alert(\"Invalid JSON format.\");\n              }\n            } catch (err) {\n              alert(\"Failed to parse JSON.\");\n            }\n          };\n          reader.readAsText(file);\n        },\n        style: {\n          marginLeft: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"flex-start\",\n        gap: \"20px\",\n        maxWidth: \"1100px\",\n        margin: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        points: points,\n        setPoints: setPoints,\n        offsets: offsets,\n        rotation: rotation,\n        fieldImagePixels: fieldImagePixels,\n        scale: scale,\n        handleClick: handleClick,\n        handleMouseDown: handleMouseDown,\n        handleDoubleClick: handleDoubleClick,\n        handleMouseMove: handleMouseMove,\n        handleMouseUp: handleMouseUp,\n        handleContextMenu: handleContextMenu,\n        selectedPointIndex: selectedPointIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Subsystems, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CodeOutput, {\n        code: generateEZTemplateAuton(points)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Yqj+MeNYApX4sc8g5DQJWrWAuqU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","generateEZTemplateAuton","Field","Inputs","CodeOutput","Subsystems","jsxDEV","_jsxDEV","defaultActions","intake","outtake","stopIntake","descore","wait","pneumatics","hoardMotors","ramDescore","slew","App","_s","rotation","setRotation","points","setPoints","offsets","setOffsets","left","right","back","front","currentHeading","setCurrentHeading","currentDirection","setCurrentDirection","selectedPointIndex","setSelectedPointIndex","draggingPointIndex","isDragging","wasDragging","fieldSizeInches","fieldImagePixels","scale","clickTimeout","stored","localStorage","getItem","JSON","parse","setItem","stringify","handleOffsetChange","e","name","value","target","prev","parseFloat","handleMouseDown","index","current","handleMouseMove","container","currentTarget","rect","getBoundingClientRect","rawX","clientX","rawY","clientY","top","Math","max","min","width","height","dx","dy","robotLeft","robotRight","robotBack","robotFront","updated","x","y","handleMouseUp","setTimeout","handleDoubleClick","clearTimeout","filter","_","i","handleClick","heading","direction","actions","handleHeadingChange","newHeading","length","handleDirectionChange","newDirection","handleContextMenu","preventDefault","className","style","userSelect","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","onClick","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","click","revokeObjectURL","accept","onChange","file","files","reader","FileReader","onload","event","loadedPoints","result","Array","isArray","alert","err","readAsText","marginLeft","display","alignItems","gap","maxWidth","margin","code","_c","$RefreshReg$"],"sources":["/Users/angelajiang/vex-auton-tool2/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport \"./App.css\";\nimport { generateEZTemplateAuton } from \"./components/ezlogic.js\";\nimport Field from \"./components/field.js\";\nimport Inputs from \"./components/inputs.js\";\nimport CodeOutput from \"./components/codeoutput.js\";\nimport Subsystems from \"./components/subsystems.js\";\n\n//helper for \"actions\" object\nconst defaultActions = () => ({\n  intake: false,\n  outtake: false,\n  stopIntake: false,\n  descore: false,\n  wait: 0,\n  pneumatics: null, // \"high\" | \"low\" | null\n  hoardMotors: false,\n  ramDescore: false,\n  slew: null, // number | null\n});\n\nfunction App() {\n  const [rotation, setRotation] = useState(0); // 0 for no rotation, 90 for blue alliance, 270 for red alliance\n  const [points, setPoints] = useState([]); // array of points with {x, y, rawX, rawY, heading, direction}\n  const [offsets, setOffsets] = useState({\n    //distances from rotational center to robot edges, makes placeholder rectangle\n    left: \"\",\n    right: \"\",\n    back: \"\",\n    front: \"\",\n  });\n  const [currentHeading, setCurrentHeading] = useState(0); // array for point headings\n  const [currentDirection, setCurrentDirection] = useState(1); // \"fwd\" or \"rev\" for forward or reverse direction\n  const [selectedPointIndex, setSelectedPointIndex] = useState(null);\n  //refs to track dragging state\n  const draggingPointIndex = useRef(null);\n  const isDragging = useRef(false); //currently dragging a point\n  const wasDragging = useRef(false); //when wasDragging is true, it means a user was dragging a point, so the next click should not add a point\n\n  //constants for field size and scale\n  const fieldSizeInches = 144;\n  const fieldImagePixels = 600;\n  const scale = fieldSizeInches / fieldImagePixels;\n\n  //used to prevent double clicks from adding points instead of deleting\n  const clickTimeout = useRef(null);\n  useEffect(() => {\n    const stored = localStorage.getItem(\"points\");\n    if (stored) {\n      setPoints(JSON.parse(stored));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"points\", JSON.stringify(points));\n  }, [points]);\n\n  // updates offsets on input change\n  const handleOffsetChange = (e) => {\n    const { name, value } = e.target; //gets label (left, right, back, front) and value from input\n    setOffsets((prev) => ({\n      ...prev, //copies previous offsets\n      [name]: value === \"\" ? \"\" : parseFloat(value),\n      //the name becomes the key\n      //if the input is empty, set to empty string\n      //otherwise parse the value to a float\n    }));\n  };\n\n  //if the user clicks on a point, start dragging it\n  //handleMouseDown = click on an already existing point\n  const handleMouseDown = (index) => {\n    draggingPointIndex.current = index; //index = index of point clicked from points array\n    isDragging.current = true;\n    wasDragging.current = false;\n  };\n\n  //when user moves a point\n  const handleMouseMove = (e) => {\n    if (!isDragging.current || draggingPointIndex.current === null) return;\n    //if not currently dragging or no point has been dragged, ignore\n    wasDragging.current = true;\n    //else set wasDragging to true so next click does not add a point\n\n    const container = e.currentTarget; //e.currentTarget is the point currently being dragged\n    const rect = container.getBoundingClientRect(); //info about the container's pos and size\n\n    let rawX = e.clientX - rect.left; //how far the mouse is from the left edge of the image\n    let rawY = e.clientY - rect.top; //how far the mouse is from the top edge of the image\n\n    //clamp rawX and rawY to be within the image bounds\n    rawX = Math.max(0, Math.min(rawX, rect.width));\n    rawY = Math.max(0, Math.min(rawY, rect.height));\n\n    //sets center of the field as (0, 0), converts from pixels to inches\n    const dx = (rawX - rect.width / 2) * scale;\n    const dy = (rawY - rect.height / 2) * scale;\n\n    //checks that robot placeholder is fully inside field\n    const robotLeft = dx - offsets.left;\n    const robotRight = dx + offsets.right;\n    const robotBack = -dy - offsets.back;\n    const robotFront = -dy + offsets.front;\n    if (\n      robotLeft < -72 ||\n      robotRight > 72 ||\n      robotBack < -72 ||\n      robotFront > 72\n    ) {\n      //if its outside, ignore\n      return;\n    }\n\n    const updated = [...points]; //create a copy of points array to update\n    updated[draggingPointIndex.current] = {\n      //at the index of the point being dragged\n      ...updated[draggingPointIndex.current], //store existing properties\n      x: dx, //also stores coordinates in inches\n      y: -dy, //negative y because dy is distance from top, so it becomes more positive as you go down\n      //used for labeling on ui\n      rawX, //raw coords for displaying on field\n      rawY,\n    };\n    setPoints(updated);\n  };\n\n  // Mouse up - finish dragging\n  const handleMouseUp = () => {\n    draggingPointIndex.current = null;\n    setTimeout(() => {\n      isDragging.current = false;\n      wasDragging.current = false;\n    }, 10);\n  };\n\n  // Double click to delete point\n  const handleDoubleClick = (index) => {\n    if (clickTimeout.current) {\n      clearTimeout(clickTimeout.current);\n      clickTimeout.current = null;\n    }\n    setPoints(points.filter((_, i) => i !== index));\n  };\n\n  // Click on empty field to add a point (only if not dragging)\n  const handleClick = (e) => {\n    if (wasDragging.current) return;\n    if (clickTimeout.current) return;\n\n    const rect = e.currentTarget.getBoundingClientRect();\n    const rawX = e.clientX - rect.left;\n    const rawY = e.clientY - rect.top;\n\n    clickTimeout.current = setTimeout(() => {\n      clickTimeout.current = null;\n\n      // Out of bounds, ignore\n      if (rawX < 0 || rawY < 0 || rawX > rect.width || rawY > rect.height)\n        return;\n\n      const dx = (rawX - rect.width / 2) * scale;\n      const dy = (rawY - rect.height / 2) * scale;\n\n      // Check robot bounds with offsets\n      const robotLeft = dx - offsets.left;\n      const robotRight = dx + offsets.right;\n      const robotBack = -dy - offsets.back;\n      const robotFront = -dy + offsets.front;\n\n      if (\n        robotLeft < -72 ||\n        robotRight > 72 ||\n        robotBack < -72 ||\n        robotFront > 72\n      )\n        return;\n\n      setPoints([\n        ...points,\n        {\n          x: dx,\n          y: -dy,\n          rawX,\n          rawY,\n          heading: currentHeading,\n          direction: currentDirection,\n          offsets,\n          actions: defaultActions(),\n        },\n      ]);\n    }, 200);\n  };\n\n  // Heading input change\n  const handleHeadingChange = (e) => {\n    const newHeading = parseFloat(e.target.value) || 0;\n    setCurrentHeading(newHeading);\n\n    if (points.length > 0) {\n      const updated = [...points];\n      updated[points.length - 1] = {\n        ...updated[points.length - 1],\n        heading: newHeading,\n      };\n      setPoints(updated);\n    }\n  };\n\n  // Direction input change\n  const handleDirectionChange = (e) => {\n    const newDirection = e.target.value; // string \"fwd\" or \"rev\"\n    setCurrentDirection(newDirection);\n\n    if (points.length > 0) {\n      const updated = [...points];\n      updated[points.length - 1] = {\n        ...updated[points.length - 1],\n        direction: newDirection,\n      };\n      setPoints(updated);\n    }\n  };\n\n  const handleContextMenu = (e, index) => {\n    e.preventDefault(); // stop the right-click menu\n    setSelectedPointIndex(index);\n  };\n\n  return (\n    <div className=\"App\" style={{ userSelect: \"none\" }}>\n      <h1>vex auton tool</h1>\n      <Inputs\n        rotation={rotation}\n        setRotation={setRotation}\n        setPoints={setPoints}\n        offsets={offsets}\n        handleOffsetChange={handleOffsetChange}\n        currentHeading={currentHeading}\n        handleHeadingChange={handleHeadingChange}\n        currentDirection={currentDirection}\n        handleDirectionChange={handleDirectionChange}\n      />\n\n      {/*upload/export json*/}\n      <div style={{ marginBottom: \"10px\" }}>\n        <button\n          onClick={() => {\n            const blob = new Blob([JSON.stringify(points, null, 2)], {\n              type: \"application/json\",\n            });\n            const url = URL.createObjectURL(blob);\n            const link = document.createElement(\"a\");\n            link.href = url;\n            link.download = \"points.json\";\n            link.click();\n            URL.revokeObjectURL(url);\n          }}\n        >\n          Export JSON\n        </button>\n\n        <input\n          type=\"file\"\n          accept=\".json\"\n          onChange={(e) => {\n            const file = e.target.files[0];\n            if (!file) return;\n\n            const reader = new FileReader();\n            reader.onload = (event) => {\n              try {\n                const loadedPoints = JSON.parse(event.target.result);\n                if (Array.isArray(loadedPoints)) {\n                  setPoints(loadedPoints);\n                } else {\n                  alert(\"Invalid JSON format.\");\n                }\n              } catch (err) {\n                alert(\"Failed to parse JSON.\");\n              }\n            };\n            reader.readAsText(file);\n          }}\n          style={{ marginLeft: \"10px\" }}\n        />\n      </div>\n\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"flex-start\",\n          gap: \"20px\",\n          maxWidth: \"1100px\",\n          margin: \"20px\",\n        }}\n      >\n        <Field\n          points={points}\n          setPoints={setPoints}\n          offsets={offsets}\n          rotation={rotation}\n          fieldImagePixels={fieldImagePixels}\n          scale={scale}\n          handleClick={handleClick}\n          handleMouseDown={handleMouseDown}\n          handleDoubleClick={handleDoubleClick}\n          handleMouseMove={handleMouseMove}\n          handleMouseUp={handleMouseUp}\n          handleContextMenu={handleContextMenu}\n          selectedPointIndex={selectedPointIndex}\n        />\n\n        <Subsystems />\n\n        <CodeOutput code={generateEZTemplateAuton(points)} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
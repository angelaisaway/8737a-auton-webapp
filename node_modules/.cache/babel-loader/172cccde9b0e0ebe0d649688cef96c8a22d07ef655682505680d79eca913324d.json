{"ast":null,"code":"import _objectSpread from\"/Users/angelajiang/vex-auton-tool2/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useRef,useEffect}from\"react\";import\"./App.css\";import{generateEZTemplateAuton}from\"./utils/ezlogic.js\";import Field from\"./components/field.js\";import Inputs from\"./components/inputs.js\";import CodeOutput from\"./components/outputs.js\";//import Subsystems from \"./components/subsystems.js\";\n//helper for \"actions\" object\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const defaultActions=()=>({intake:0,//number of blocks\nouttake:0,//number of blocks\nwait:0,//ms\npneumatics:null,// \"high\" | \"low\"\nslew:false// boolean\n});function App(){const[rotation,setRotation]=useState(0);// 0 for no rotation, 90 for blue alliance, 270 for red alliance\nconst[points,setPoints]=useState([]);// array of points with {x, y, rawX, rawY, heading, direction}\nconst[offsets,setOffsets]=useState({//distances from rotational center to robot edges, makes placeholder rectangle\nleft:\"\",right:\"\",back:\"\",front:\"\"});const[currentHeading,setCurrentHeading]=useState(0);// array for point headings\nconst[currentDirection,setCurrentDirection]=useState(1);// \"fwd\" or \"rev\" for forward or reverse direction\nconst[selectedPointIndex,setSelectedPointIndex]=useState(null);//refs to track dragging state\nconst draggingPointIndex=useRef(null);const isDragging=useRef(false);//currently dragging a point\nconst wasDragging=useRef(false);//when wasDragging is true, it means a user was dragging a point, so the next click should not add a point\n//constants for field size and scale\nconst fieldSizeInches=144;const fieldImagePixels=600;const scale=fieldSizeInches/fieldImagePixels;const isRobotInBounds=(dx,dy)=>{const robotLeft=dx-offsets.left;const robotRight=dx+offsets.right;const robotBack=-dy-offsets.back;const robotFront=-dy+offsets.front;return robotLeft>=-72&&robotRight<=72&&robotBack>=-72&&robotFront<=72;};//used to prevent double clicks from adding points instead of deleting\nconst clickTimeout=useRef(null);useEffect(()=>{const stored=localStorage.getItem(\"points\");if(stored){setPoints(JSON.parse(stored));}},[]);useEffect(()=>{localStorage.setItem(\"points\",JSON.stringify(points));},[points]);// updates offsets on input change\nconst handleOffsetChange=e=>{const{name,value}=e.target;//gets label (left, right, back, front) and value from input\nsetOffsets(prev=>_objectSpread(_objectSpread({},prev),{},{//copies previous offsets\n[name]:value===\"\"?\"\":parseFloat(value)//the name becomes the key\n//if the input is empty, set to empty string\n//otherwise parse the value to a float\n}));};//if the user clicks on a point, start dragging it\n//handleMouseDown = click on an already existing point\nconst handleMouseDown=index=>{draggingPointIndex.current=index;//index = index of point clicked from points array\nisDragging.current=true;wasDragging.current=false;};//when user moves a point\nconst handleMouseMove=e=>{if(!isDragging.current||draggingPointIndex.current===null)return;//if not currently dragging or no point has been dragged, ignore\nwasDragging.current=true;//else set wasDragging to true so next click does not add a point\nconst container=e.currentTarget;//e.currentTarget is the point currently being dragged\nconst rect=container.getBoundingClientRect();//info about the container's pos and size\nlet rawX=e.clientX-rect.left;//how far the mouse is from the left edge of the image\nlet rawY=e.clientY-rect.top;//how far the mouse is from the top edge of the image\n//clamp rawX and rawY to be within the image bounds\nrawX=Math.max(0,Math.min(rawX,rect.width));rawY=Math.max(0,Math.min(rawY,rect.height));//sets center of the field as (0, 0), converts from pixels to inches\nconst dx=(rawX-rect.width/2)*scale;const dy=(rawY-rect.height/2)*scale;//checks that robot placeholder is fully inside field\nif(!isRobotInBounds(dx,dy))return;const updated=[...points];//create a copy of points array to update\nupdated[draggingPointIndex.current]=_objectSpread(_objectSpread({},updated[draggingPointIndex.current]),{},{//store existing properties\nx:dx,//also stores coordinates in inches\ny:-dy,//negative y because dy is distance from top, so it becomes more positive as you go down\n//used for labeling on ui\nrawX,//raw coords for displaying on field\nrawY});setPoints(updated);};// Mouse up - finish dragging\nconst handleMouseUp=()=>{draggingPointIndex.current=null;setTimeout(()=>{isDragging.current=false;wasDragging.current=false;},10);};// Double click to delete point\nconst handleDoubleClick=index=>{if(clickTimeout.current){clearTimeout(clickTimeout.current);clickTimeout.current=null;}setPoints(points.filter((_,i)=>i!==index));};// Click on empty field to add a point (only if not dragging)\nconst handleClick=e=>{if(wasDragging.current)return;if(clickTimeout.current)return;const rect=e.currentTarget.getBoundingClientRect();const rawX=e.clientX-rect.left;const rawY=e.clientY-rect.top;clickTimeout.current=setTimeout(()=>{clickTimeout.current=null;// Out of bounds, ignore\nif(rawX<0||rawY<0||rawX>rect.width||rawY>rect.height)return;const dx=(rawX-rect.width/2)*scale;const dy=(rawY-rect.height/2)*scale;if(!isRobotInBounds(dx,dy))return;setPoints([...points,{x:dx,y:-dy,rawX,rawY,heading:currentHeading,direction:currentDirection,offsets,actions:defaultActions()}]);},200);};// Heading input change\nconst handleHeadingChange=e=>{const newHeading=parseFloat(e.target.value)||0;setCurrentHeading(newHeading);if(points.length>0){const updated=[...points];updated[points.length-1]=_objectSpread(_objectSpread({},updated[points.length-1]),{},{heading:newHeading});setPoints(updated);}};// Direction input change\nconst handleDirectionChange=e=>{const newDirection=e.target.value;// string \"fwd\" or \"rev\"\nsetCurrentDirection(newDirection);if(points.length>0){const updated=[...points];updated[points.length-1]=_objectSpread(_objectSpread({},updated[points.length-1]),{},{direction:newDirection});setPoints(updated);}};const handleContextMenu=(e,index)=>{e.preventDefault();// stop the right-click menu\nsetSelectedPointIndex(index);};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",style:{userSelect:\"none\"},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"vex auton tool\"}),/*#__PURE__*/_jsx(\"p\",{children:\"rn the subsystems functions are pseudocoded in\"}),/*#__PURE__*/_jsx(Inputs,{rotation:rotation,setRotation:setRotation,setPoints:setPoints,offsets:offsets,handleOffsetChange:handleOffsetChange,currentHeading:currentHeading,handleHeadingChange:handleHeadingChange,currentDirection:currentDirection,handleDirectionChange:handleDirectionChange,points:points,fieldImagePixels:fieldImagePixels,scale:scale}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",alignItems:\"flex-start\",gap:\"20px\",maxWidth:\"1100px\",margin:\"20px\"},children:[/*#__PURE__*/_jsx(Field,{points:points,setPoints:setPoints,offsets:offsets,scale:scale,handleClick:handleClick,handleMouseDown:handleMouseDown,handleDoubleClick:handleDoubleClick,handleMouseMove:handleMouseMove,handleMouseUp:handleMouseUp,handleContextMenu:handleContextMenu,selectedPointIndex:selectedPointIndex}),/*#__PURE__*/_jsx(CodeOutput,{code:generateEZTemplateAuton(points)})]})]});}export default App;","map":{"version":3,"names":["React","useState","useRef","useEffect","generateEZTemplateAuton","Field","Inputs","CodeOutput","jsx","_jsx","jsxs","_jsxs","defaultActions","intake","outtake","wait","pneumatics","slew","App","rotation","setRotation","points","setPoints","offsets","setOffsets","left","right","back","front","currentHeading","setCurrentHeading","currentDirection","setCurrentDirection","selectedPointIndex","setSelectedPointIndex","draggingPointIndex","isDragging","wasDragging","fieldSizeInches","fieldImagePixels","scale","isRobotInBounds","dx","dy","robotLeft","robotRight","robotBack","robotFront","clickTimeout","stored","localStorage","getItem","JSON","parse","setItem","stringify","handleOffsetChange","e","name","value","target","prev","_objectSpread","parseFloat","handleMouseDown","index","current","handleMouseMove","container","currentTarget","rect","getBoundingClientRect","rawX","clientX","rawY","clientY","top","Math","max","min","width","height","updated","x","y","handleMouseUp","setTimeout","handleDoubleClick","clearTimeout","filter","_","i","handleClick","heading","direction","actions","handleHeadingChange","newHeading","length","handleDirectionChange","newDirection","handleContextMenu","preventDefault","className","style","userSelect","children","display","alignItems","gap","maxWidth","margin","code"],"sources":["/Users/angelajiang/vex-auton-tool2/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport \"./App.css\";\nimport { generateEZTemplateAuton } from \"./utils/ezlogic.js\";\nimport Field from \"./components/field.js\";\nimport Inputs from \"./components/inputs.js\";\nimport CodeOutput from \"./components/outputs.js\";\n//import Subsystems from \"./components/subsystems.js\";\n\n//helper for \"actions\" object\nconst defaultActions = () => ({\n  intake: 0, //number of blocks\n  outtake: 0, //number of blocks\n  wait: 0, //ms\n  pneumatics: null, // \"high\" | \"low\"\n  slew: false, // boolean\n});\n\nfunction App() {\n  const [rotation, setRotation] = useState(0); // 0 for no rotation, 90 for blue alliance, 270 for red alliance\n  const [points, setPoints] = useState([]); // array of points with {x, y, rawX, rawY, heading, direction}\n  const [offsets, setOffsets] = useState({\n    //distances from rotational center to robot edges, makes placeholder rectangle\n    left: \"\",\n    right: \"\",\n    back: \"\",\n    front: \"\",\n  });\n  const [currentHeading, setCurrentHeading] = useState(0); // array for point headings\n  const [currentDirection, setCurrentDirection] = useState(1); // \"fwd\" or \"rev\" for forward or reverse direction\n  const [selectedPointIndex, setSelectedPointIndex] = useState(null);\n  //refs to track dragging state\n  const draggingPointIndex = useRef(null);\n  const isDragging = useRef(false); //currently dragging a point\n  const wasDragging = useRef(false); //when wasDragging is true, it means a user was dragging a point, so the next click should not add a point\n\n  //constants for field size and scale\n  const fieldSizeInches = 144;\n  const fieldImagePixels = 600;\n  const scale = fieldSizeInches / fieldImagePixels;\n\n  const isRobotInBounds = (dx, dy) => {\n    const robotLeft = dx - offsets.left;\n    const robotRight = dx + offsets.right;\n    const robotBack = -dy - offsets.back;\n    const robotFront = -dy + offsets.front;\n\n    return (\n      robotLeft >= -72 &&\n      robotRight <= 72 &&\n      robotBack >= -72 &&\n      robotFront <= 72\n    );\n  };\n\n  //used to prevent double clicks from adding points instead of deleting\n  const clickTimeout = useRef(null);\n  useEffect(() => {\n    const stored = localStorage.getItem(\"points\");\n    if (stored) {\n      setPoints(JSON.parse(stored));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"points\", JSON.stringify(points));\n  }, [points]);\n\n  // updates offsets on input change\n  const handleOffsetChange = (e) => {\n    const { name, value } = e.target; //gets label (left, right, back, front) and value from input\n    setOffsets((prev) => ({\n      ...prev, //copies previous offsets\n      [name]: value === \"\" ? \"\" : parseFloat(value),\n      //the name becomes the key\n      //if the input is empty, set to empty string\n      //otherwise parse the value to a float\n    }));\n  };\n\n  //if the user clicks on a point, start dragging it\n  //handleMouseDown = click on an already existing point\n  const handleMouseDown = (index) => {\n    draggingPointIndex.current = index; //index = index of point clicked from points array\n    isDragging.current = true;\n    wasDragging.current = false;\n  };\n\n  //when user moves a point\n  const handleMouseMove = (e) => {\n    if (!isDragging.current || draggingPointIndex.current === null) return;\n    //if not currently dragging or no point has been dragged, ignore\n    wasDragging.current = true;\n    //else set wasDragging to true so next click does not add a point\n\n    const container = e.currentTarget; //e.currentTarget is the point currently being dragged\n    const rect = container.getBoundingClientRect(); //info about the container's pos and size\n\n    let rawX = e.clientX - rect.left; //how far the mouse is from the left edge of the image\n    let rawY = e.clientY - rect.top; //how far the mouse is from the top edge of the image\n\n    //clamp rawX and rawY to be within the image bounds\n    rawX = Math.max(0, Math.min(rawX, rect.width));\n    rawY = Math.max(0, Math.min(rawY, rect.height));\n\n    //sets center of the field as (0, 0), converts from pixels to inches\n    const dx = (rawX - rect.width / 2) * scale;\n    const dy = (rawY - rect.height / 2) * scale;\n\n    //checks that robot placeholder is fully inside field\n    if (!isRobotInBounds(dx, dy)) return;\n\n    const updated = [...points]; //create a copy of points array to update\n    updated[draggingPointIndex.current] = {\n      //at the index of the point being dragged\n      ...updated[draggingPointIndex.current], //store existing properties\n      x: dx, //also stores coordinates in inches\n      y: -dy, //negative y because dy is distance from top, so it becomes more positive as you go down\n      //used for labeling on ui\n      rawX, //raw coords for displaying on field\n      rawY,\n    };\n    setPoints(updated);\n  };\n\n  // Mouse up - finish dragging\n  const handleMouseUp = () => {\n    draggingPointIndex.current = null;\n    setTimeout(() => {\n      isDragging.current = false;\n      wasDragging.current = false;\n    }, 10);\n  };\n\n  // Double click to delete point\n  const handleDoubleClick = (index) => {\n    if (clickTimeout.current) {\n      clearTimeout(clickTimeout.current);\n      clickTimeout.current = null;\n    }\n    setPoints(points.filter((_, i) => i !== index));\n  };\n\n  // Click on empty field to add a point (only if not dragging)\n  const handleClick = (e) => {\n    if (wasDragging.current) return;\n    if (clickTimeout.current) return;\n\n    const rect = e.currentTarget.getBoundingClientRect();\n    const rawX = e.clientX - rect.left;\n    const rawY = e.clientY - rect.top;\n\n    clickTimeout.current = setTimeout(() => {\n      clickTimeout.current = null;\n\n      // Out of bounds, ignore\n      if (rawX < 0 || rawY < 0 || rawX > rect.width || rawY > rect.height)\n        return;\n\n      const dx = (rawX - rect.width / 2) * scale;\n      const dy = (rawY - rect.height / 2) * scale;\n\n      if (!isRobotInBounds(dx, dy)) return;\n\n      setPoints([\n        ...points,\n        {\n          x: dx,\n          y: -dy,\n          rawX,\n          rawY,\n          heading: currentHeading,\n          direction: currentDirection,\n          offsets,\n          actions: defaultActions(),\n        },\n      ]);\n    }, 200);\n  };\n\n  // Heading input change\n  const handleHeadingChange = (e) => {\n    const newHeading = parseFloat(e.target.value) || 0;\n    setCurrentHeading(newHeading);\n\n    if (points.length > 0) {\n      const updated = [...points];\n      updated[points.length - 1] = {\n        ...updated[points.length - 1],\n        heading: newHeading,\n      };\n      setPoints(updated);\n    }\n  };\n\n  // Direction input change\n  const handleDirectionChange = (e) => {\n    const newDirection = e.target.value; // string \"fwd\" or \"rev\"\n    setCurrentDirection(newDirection);\n\n    if (points.length > 0) {\n      const updated = [...points];\n      updated[points.length - 1] = {\n        ...updated[points.length - 1],\n        direction: newDirection,\n      };\n      setPoints(updated);\n    }\n  };\n\n  const handleContextMenu = (e, index) => {\n    e.preventDefault(); // stop the right-click menu\n    setSelectedPointIndex(index);\n  };\n\n  return (\n    <div className=\"App\" style={{ userSelect: \"none\" }}>\n      <h1>vex auton tool</h1>\n      <p>rn the subsystems functions are pseudocoded in</p>\n      <Inputs\n        rotation={rotation}\n        setRotation={setRotation}\n        setPoints={setPoints}\n        offsets={offsets}\n        handleOffsetChange={handleOffsetChange}\n        currentHeading={currentHeading}\n        handleHeadingChange={handleHeadingChange}\n        currentDirection={currentDirection}\n        handleDirectionChange={handleDirectionChange}\n        points={points}\n        fieldImagePixels={fieldImagePixels}\n        scale={scale}\n      />\n\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"flex-start\",\n          gap: \"20px\",\n          maxWidth: \"1100px\",\n          margin: \"20px\",\n        }}\n      >\n        <Field\n          points={points}\n          setPoints={setPoints}\n          offsets={offsets}\n          scale={scale}\n          handleClick={handleClick}\n          handleMouseDown={handleMouseDown}\n          handleDoubleClick={handleDoubleClick}\n          handleMouseMove={handleMouseMove}\n          handleMouseUp={handleMouseUp}\n          handleContextMenu={handleContextMenu}\n          selectedPointIndex={selectedPointIndex}\n        />\n\n        {/* <Subsystems /> */}\n\n        <CodeOutput code={generateEZTemplateAuton(points)} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"uHAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,MAAM,CAAEC,SAAS,KAAQ,OAAO,CAC1D,MAAO,WAAW,CAClB,OAASC,uBAAuB,KAAQ,oBAAoB,CAC5D,MAAO,CAAAC,KAAK,KAAM,uBAAuB,CACzC,MAAO,CAAAC,MAAM,KAAM,wBAAwB,CAC3C,MAAO,CAAAC,UAAU,KAAM,yBAAyB,CAChD;AAEA;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,KAAM,CAAAC,cAAc,CAAGA,CAAA,IAAO,CAC5BC,MAAM,CAAE,CAAC,CAAE;AACXC,OAAO,CAAE,CAAC,CAAE;AACZC,IAAI,CAAE,CAAC,CAAE;AACTC,UAAU,CAAE,IAAI,CAAE;AAClBC,IAAI,CAAE,KAAO;AACf,CAAC,CAAC,CAEF,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGnB,QAAQ,CAAC,CAAC,CAAC,CAAE;AAC7C,KAAM,CAACoB,MAAM,CAAEC,SAAS,CAAC,CAAGrB,QAAQ,CAAC,EAAE,CAAC,CAAE;AAC1C,KAAM,CAACsB,OAAO,CAAEC,UAAU,CAAC,CAAGvB,QAAQ,CAAC,CACrC;AACAwB,IAAI,CAAE,EAAE,CACRC,KAAK,CAAE,EAAE,CACTC,IAAI,CAAE,EAAE,CACRC,KAAK,CAAE,EACT,CAAC,CAAC,CACF,KAAM,CAACC,cAAc,CAAEC,iBAAiB,CAAC,CAAG7B,QAAQ,CAAC,CAAC,CAAC,CAAE;AACzD,KAAM,CAAC8B,gBAAgB,CAAEC,mBAAmB,CAAC,CAAG/B,QAAQ,CAAC,CAAC,CAAC,CAAE;AAC7D,KAAM,CAACgC,kBAAkB,CAAEC,qBAAqB,CAAC,CAAGjC,QAAQ,CAAC,IAAI,CAAC,CAClE;AACA,KAAM,CAAAkC,kBAAkB,CAAGjC,MAAM,CAAC,IAAI,CAAC,CACvC,KAAM,CAAAkC,UAAU,CAAGlC,MAAM,CAAC,KAAK,CAAC,CAAE;AAClC,KAAM,CAAAmC,WAAW,CAAGnC,MAAM,CAAC,KAAK,CAAC,CAAE;AAEnC;AACA,KAAM,CAAAoC,eAAe,CAAG,GAAG,CAC3B,KAAM,CAAAC,gBAAgB,CAAG,GAAG,CAC5B,KAAM,CAAAC,KAAK,CAAGF,eAAe,CAAGC,gBAAgB,CAEhD,KAAM,CAAAE,eAAe,CAAGA,CAACC,EAAE,CAAEC,EAAE,GAAK,CAClC,KAAM,CAAAC,SAAS,CAAGF,EAAE,CAAGnB,OAAO,CAACE,IAAI,CACnC,KAAM,CAAAoB,UAAU,CAAGH,EAAE,CAAGnB,OAAO,CAACG,KAAK,CACrC,KAAM,CAAAoB,SAAS,CAAG,CAACH,EAAE,CAAGpB,OAAO,CAACI,IAAI,CACpC,KAAM,CAAAoB,UAAU,CAAG,CAACJ,EAAE,CAAGpB,OAAO,CAACK,KAAK,CAEtC,MACE,CAAAgB,SAAS,EAAI,CAAC,EAAE,EAChBC,UAAU,EAAI,EAAE,EAChBC,SAAS,EAAI,CAAC,EAAE,EAChBC,UAAU,EAAI,EAAE,CAEpB,CAAC,CAED;AACA,KAAM,CAAAC,YAAY,CAAG9C,MAAM,CAAC,IAAI,CAAC,CACjCC,SAAS,CAAC,IAAM,CACd,KAAM,CAAA8C,MAAM,CAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAC7C,GAAIF,MAAM,CAAE,CACV3B,SAAS,CAAC8B,IAAI,CAACC,KAAK,CAACJ,MAAM,CAAC,CAAC,CAC/B,CACF,CAAC,CAAE,EAAE,CAAC,CACN9C,SAAS,CAAC,IAAM,CACd+C,YAAY,CAACI,OAAO,CAAC,QAAQ,CAAEF,IAAI,CAACG,SAAS,CAAClC,MAAM,CAAC,CAAC,CACxD,CAAC,CAAE,CAACA,MAAM,CAAC,CAAC,CAEZ;AACA,KAAM,CAAAmC,kBAAkB,CAAIC,CAAC,EAAK,CAChC,KAAM,CAAEC,IAAI,CAAEC,KAAM,CAAC,CAAGF,CAAC,CAACG,MAAM,CAAE;AAClCpC,UAAU,CAAEqC,IAAI,EAAAC,aAAA,CAAAA,aAAA,IACXD,IAAI,MAAE;AACT,CAACH,IAAI,EAAGC,KAAK,GAAK,EAAE,CAAG,EAAE,CAAGI,UAAU,CAACJ,KAAK,CAC5C;AACA;AACA;AAAA,EACA,CAAC,CACL,CAAC,CAED;AACA;AACA,KAAM,CAAAK,eAAe,CAAIC,KAAK,EAAK,CACjC9B,kBAAkB,CAAC+B,OAAO,CAAGD,KAAK,CAAE;AACpC7B,UAAU,CAAC8B,OAAO,CAAG,IAAI,CACzB7B,WAAW,CAAC6B,OAAO,CAAG,KAAK,CAC7B,CAAC,CAED;AACA,KAAM,CAAAC,eAAe,CAAIV,CAAC,EAAK,CAC7B,GAAI,CAACrB,UAAU,CAAC8B,OAAO,EAAI/B,kBAAkB,CAAC+B,OAAO,GAAK,IAAI,CAAE,OAChE;AACA7B,WAAW,CAAC6B,OAAO,CAAG,IAAI,CAC1B;AAEA,KAAM,CAAAE,SAAS,CAAGX,CAAC,CAACY,aAAa,CAAE;AACnC,KAAM,CAAAC,IAAI,CAAGF,SAAS,CAACG,qBAAqB,CAAC,CAAC,CAAE;AAEhD,GAAI,CAAAC,IAAI,CAAGf,CAAC,CAACgB,OAAO,CAAGH,IAAI,CAAC7C,IAAI,CAAE;AAClC,GAAI,CAAAiD,IAAI,CAAGjB,CAAC,CAACkB,OAAO,CAAGL,IAAI,CAACM,GAAG,CAAE;AAEjC;AACAJ,IAAI,CAAGK,IAAI,CAACC,GAAG,CAAC,CAAC,CAAED,IAAI,CAACE,GAAG,CAACP,IAAI,CAAEF,IAAI,CAACU,KAAK,CAAC,CAAC,CAC9CN,IAAI,CAAGG,IAAI,CAACC,GAAG,CAAC,CAAC,CAAED,IAAI,CAACE,GAAG,CAACL,IAAI,CAAEJ,IAAI,CAACW,MAAM,CAAC,CAAC,CAE/C;AACA,KAAM,CAAAvC,EAAE,CAAG,CAAC8B,IAAI,CAAGF,IAAI,CAACU,KAAK,CAAG,CAAC,EAAIxC,KAAK,CAC1C,KAAM,CAAAG,EAAE,CAAG,CAAC+B,IAAI,CAAGJ,IAAI,CAACW,MAAM,CAAG,CAAC,EAAIzC,KAAK,CAE3C;AACA,GAAI,CAACC,eAAe,CAACC,EAAE,CAAEC,EAAE,CAAC,CAAE,OAE9B,KAAM,CAAAuC,OAAO,CAAG,CAAC,GAAG7D,MAAM,CAAC,CAAE;AAC7B6D,OAAO,CAAC/C,kBAAkB,CAAC+B,OAAO,CAAC,CAAAJ,aAAA,CAAAA,aAAA,IAE9BoB,OAAO,CAAC/C,kBAAkB,CAAC+B,OAAO,CAAC,MAAE;AACxCiB,CAAC,CAAEzC,EAAE,CAAE;AACP0C,CAAC,CAAE,CAACzC,EAAE,CAAE;AACR;AACA6B,IAAI,CAAE;AACNE,IAAI,EACL,CACDpD,SAAS,CAAC4D,OAAO,CAAC,CACpB,CAAC,CAED;AACA,KAAM,CAAAG,aAAa,CAAGA,CAAA,GAAM,CAC1BlD,kBAAkB,CAAC+B,OAAO,CAAG,IAAI,CACjCoB,UAAU,CAAC,IAAM,CACflD,UAAU,CAAC8B,OAAO,CAAG,KAAK,CAC1B7B,WAAW,CAAC6B,OAAO,CAAG,KAAK,CAC7B,CAAC,CAAE,EAAE,CAAC,CACR,CAAC,CAED;AACA,KAAM,CAAAqB,iBAAiB,CAAItB,KAAK,EAAK,CACnC,GAAIjB,YAAY,CAACkB,OAAO,CAAE,CACxBsB,YAAY,CAACxC,YAAY,CAACkB,OAAO,CAAC,CAClClB,YAAY,CAACkB,OAAO,CAAG,IAAI,CAC7B,CACA5C,SAAS,CAACD,MAAM,CAACoE,MAAM,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAKA,CAAC,GAAK1B,KAAK,CAAC,CAAC,CACjD,CAAC,CAED;AACA,KAAM,CAAA2B,WAAW,CAAInC,CAAC,EAAK,CACzB,GAAIpB,WAAW,CAAC6B,OAAO,CAAE,OACzB,GAAIlB,YAAY,CAACkB,OAAO,CAAE,OAE1B,KAAM,CAAAI,IAAI,CAAGb,CAAC,CAACY,aAAa,CAACE,qBAAqB,CAAC,CAAC,CACpD,KAAM,CAAAC,IAAI,CAAGf,CAAC,CAACgB,OAAO,CAAGH,IAAI,CAAC7C,IAAI,CAClC,KAAM,CAAAiD,IAAI,CAAGjB,CAAC,CAACkB,OAAO,CAAGL,IAAI,CAACM,GAAG,CAEjC5B,YAAY,CAACkB,OAAO,CAAGoB,UAAU,CAAC,IAAM,CACtCtC,YAAY,CAACkB,OAAO,CAAG,IAAI,CAE3B;AACA,GAAIM,IAAI,CAAG,CAAC,EAAIE,IAAI,CAAG,CAAC,EAAIF,IAAI,CAAGF,IAAI,CAACU,KAAK,EAAIN,IAAI,CAAGJ,IAAI,CAACW,MAAM,CACjE,OAEF,KAAM,CAAAvC,EAAE,CAAG,CAAC8B,IAAI,CAAGF,IAAI,CAACU,KAAK,CAAG,CAAC,EAAIxC,KAAK,CAC1C,KAAM,CAAAG,EAAE,CAAG,CAAC+B,IAAI,CAAGJ,IAAI,CAACW,MAAM,CAAG,CAAC,EAAIzC,KAAK,CAE3C,GAAI,CAACC,eAAe,CAACC,EAAE,CAAEC,EAAE,CAAC,CAAE,OAE9BrB,SAAS,CAAC,CACR,GAAGD,MAAM,CACT,CACE8D,CAAC,CAAEzC,EAAE,CACL0C,CAAC,CAAE,CAACzC,EAAE,CACN6B,IAAI,CACJE,IAAI,CACJmB,OAAO,CAAEhE,cAAc,CACvBiE,SAAS,CAAE/D,gBAAgB,CAC3BR,OAAO,CACPwE,OAAO,CAAEnF,cAAc,CAAC,CAC1B,CAAC,CACF,CAAC,CACJ,CAAC,CAAE,GAAG,CAAC,CACT,CAAC,CAED;AACA,KAAM,CAAAoF,mBAAmB,CAAIvC,CAAC,EAAK,CACjC,KAAM,CAAAwC,UAAU,CAAGlC,UAAU,CAACN,CAAC,CAACG,MAAM,CAACD,KAAK,CAAC,EAAI,CAAC,CAClD7B,iBAAiB,CAACmE,UAAU,CAAC,CAE7B,GAAI5E,MAAM,CAAC6E,MAAM,CAAG,CAAC,CAAE,CACrB,KAAM,CAAAhB,OAAO,CAAG,CAAC,GAAG7D,MAAM,CAAC,CAC3B6D,OAAO,CAAC7D,MAAM,CAAC6E,MAAM,CAAG,CAAC,CAAC,CAAApC,aAAA,CAAAA,aAAA,IACrBoB,OAAO,CAAC7D,MAAM,CAAC6E,MAAM,CAAG,CAAC,CAAC,MAC7BL,OAAO,CAAEI,UAAU,EACpB,CACD3E,SAAS,CAAC4D,OAAO,CAAC,CACpB,CACF,CAAC,CAED;AACA,KAAM,CAAAiB,qBAAqB,CAAI1C,CAAC,EAAK,CACnC,KAAM,CAAA2C,YAAY,CAAG3C,CAAC,CAACG,MAAM,CAACD,KAAK,CAAE;AACrC3B,mBAAmB,CAACoE,YAAY,CAAC,CAEjC,GAAI/E,MAAM,CAAC6E,MAAM,CAAG,CAAC,CAAE,CACrB,KAAM,CAAAhB,OAAO,CAAG,CAAC,GAAG7D,MAAM,CAAC,CAC3B6D,OAAO,CAAC7D,MAAM,CAAC6E,MAAM,CAAG,CAAC,CAAC,CAAApC,aAAA,CAAAA,aAAA,IACrBoB,OAAO,CAAC7D,MAAM,CAAC6E,MAAM,CAAG,CAAC,CAAC,MAC7BJ,SAAS,CAAEM,YAAY,EACxB,CACD9E,SAAS,CAAC4D,OAAO,CAAC,CACpB,CACF,CAAC,CAED,KAAM,CAAAmB,iBAAiB,CAAGA,CAAC5C,CAAC,CAAEQ,KAAK,GAAK,CACtCR,CAAC,CAAC6C,cAAc,CAAC,CAAC,CAAE;AACpBpE,qBAAqB,CAAC+B,KAAK,CAAC,CAC9B,CAAC,CAED,mBACEtD,KAAA,QAAK4F,SAAS,CAAC,KAAK,CAACC,KAAK,CAAE,CAAEC,UAAU,CAAE,MAAO,CAAE,CAAAC,QAAA,eACjDjG,IAAA,OAAAiG,QAAA,CAAI,gBAAc,CAAI,CAAC,cACvBjG,IAAA,MAAAiG,QAAA,CAAG,gDAA8C,CAAG,CAAC,cACrDjG,IAAA,CAACH,MAAM,EACLa,QAAQ,CAAEA,QAAS,CACnBC,WAAW,CAAEA,WAAY,CACzBE,SAAS,CAAEA,SAAU,CACrBC,OAAO,CAAEA,OAAQ,CACjBiC,kBAAkB,CAAEA,kBAAmB,CACvC3B,cAAc,CAAEA,cAAe,CAC/BmE,mBAAmB,CAAEA,mBAAoB,CACzCjE,gBAAgB,CAAEA,gBAAiB,CACnCoE,qBAAqB,CAAEA,qBAAsB,CAC7C9E,MAAM,CAAEA,MAAO,CACfkB,gBAAgB,CAAEA,gBAAiB,CACnCC,KAAK,CAAEA,KAAM,CACd,CAAC,cAEF7B,KAAA,QACE6F,KAAK,CAAE,CACLG,OAAO,CAAE,MAAM,CACfC,UAAU,CAAE,YAAY,CACxBC,GAAG,CAAE,MAAM,CACXC,QAAQ,CAAE,QAAQ,CAClBC,MAAM,CAAE,MACV,CAAE,CAAAL,QAAA,eAEFjG,IAAA,CAACJ,KAAK,EACJgB,MAAM,CAAEA,MAAO,CACfC,SAAS,CAAEA,SAAU,CACrBC,OAAO,CAAEA,OAAQ,CACjBiB,KAAK,CAAEA,KAAM,CACboD,WAAW,CAAEA,WAAY,CACzB5B,eAAe,CAAEA,eAAgB,CACjCuB,iBAAiB,CAAEA,iBAAkB,CACrCpB,eAAe,CAAEA,eAAgB,CACjCkB,aAAa,CAAEA,aAAc,CAC7BgB,iBAAiB,CAAEA,iBAAkB,CACrCpE,kBAAkB,CAAEA,kBAAmB,CACxC,CAAC,cAIFxB,IAAA,CAACF,UAAU,EAACyG,IAAI,CAAE5G,uBAAuB,CAACiB,MAAM,CAAE,CAAE,CAAC,EAClD,CAAC,EACH,CAAC,CAEV,CAEA,cAAe,CAAAH,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
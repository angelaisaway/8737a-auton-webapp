{"ast":null,"code":"var _jsxFileName = \"/Users/angelajiang/vex-auton-tool2/src/components/outputs.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { obsidian } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CodeOutput({\n  code,\n  editCode,\n  setEditCode\n}) {\n  _s();\n  const [copied, setCopied] = useState(false);\n  const handleCopy = () => {\n    if (!navigator.clipboard) {\n      alert(\"Clipboard API not supported\");\n      return;\n    }\n    navigator.clipboard.writeText(code).then(() => {\n      setCopied(true);\n      setTimeout(() => setCopied(false), 500);\n    }).catch(() => {\n      alert(\"uh oh!\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"code\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCopy,\n      style: {\n        position: \"absolute\",\n        top: 200,\n        right: 80,\n        padding: \"4px 8px\",\n        fontSize: \"0.8rem\",\n        cursor: \"pointer\",\n        borderRadius: \"4px\",\n        border: \"none\",\n        backgroundColor: copied ? \"green\" : \"#007bff\",\n        color: \"white\",\n        userSelect: \"none\",\n        zIndex: 10\n      },\n      children: copied ? \"done\" : \"copy code to clipboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      style: {\n        whiteSpace: \"pre-wrap\",\n        userSelect: \"text\",\n        fontSize: \"0.8rem\",\n        backgroundColor: \"rgba(0, 0, 0, 0.0)\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n        language: \"c\",\n        style: obsidian,\n        wrapLines: true,\n        showLineNumbers: true,\n        children: code\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"paste written code below to test premade path. clear the textarea to keep creating path on field.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: editCode,\n        onChange: e => setEditCode(e.target.value),\n        style: {\n          width: \"100%\",\n          height: \"300px\",\n          fontFamily: \"monospace\",\n          fontSize: \"14px\",\n          marginTop: \"20px\",\n          whiteSpace: \"pre\",\n          backgroundColor: \"rgba(0, 0, 0, 0.1)\",\n          color: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(CodeOutput, \"NE86rL3vg4NVcTTWDavsT0hUBJs=\");\n_c = CodeOutput;\nexport default CodeOutput;\nvar _c;\n$RefreshReg$(_c, \"CodeOutput\");","map":{"version":3,"names":["React","useState","SyntaxHighlighter","obsidian","jsxDEV","_jsxDEV","CodeOutput","code","editCode","setEditCode","_s","copied","setCopied","handleCopy","navigator","clipboard","alert","writeText","then","setTimeout","catch","className","children","onClick","style","position","top","right","padding","fontSize","cursor","borderRadius","border","backgroundColor","color","userSelect","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","whiteSpace","language","wrapLines","showLineNumbers","value","onChange","e","target","width","height","fontFamily","marginTop","_c","$RefreshReg$"],"sources":["/Users/angelajiang/vex-auton-tool2/src/components/outputs.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { obsidian } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\n\nfunction CodeOutput({ code, editCode, setEditCode }) {\n  const [copied, setCopied] = useState(false);\n\n  const handleCopy = () => {\n    if (!navigator.clipboard) {\n      alert(\"Clipboard API not supported\");\n      return;\n    }\n    navigator.clipboard\n      .writeText(code)\n      .then(() => {\n        setCopied(true);\n        setTimeout(() => setCopied(false), 500);\n      })\n      .catch(() => {\n        alert(\"uh oh!\");\n      });\n  };\n\n  return (\n    <div className=\"code\">\n      <button\n        onClick={handleCopy}\n        style={{\n          position: \"absolute\",\n          top: 200,\n          right: 80,\n          padding: \"4px 8px\",\n          fontSize: \"0.8rem\",\n          cursor: \"pointer\",\n          borderRadius: \"4px\",\n          border: \"none\",\n          backgroundColor: copied ? \"green\" : \"#007bff\",\n          color: \"white\",\n          userSelect: \"none\",\n          zIndex: 10,\n        }}\n      >\n        {copied ? \"done\" : \"copy code to clipboard\"}\n      </button>\n\n      <pre\n        style={{\n          whiteSpace: \"pre-wrap\",\n          userSelect: \"text\",\n          fontSize: \"0.8rem\",\n          backgroundColor: \"rgba(0, 0, 0, 0.0)\",\n        }}\n      >\n        <SyntaxHighlighter\n          language=\"c\"\n          style={obsidian}\n          wrapLines={true}\n          showLineNumbers={true}\n        >\n          {code}\n        </SyntaxHighlighter>\n\n        <p>\n          paste written code below to test premade path. clear the textarea to\n          keep creating path on field.\n        </p>\n        <textarea\n          value={editCode}\n          onChange={(e) => setEditCode(e.target.value)}\n          style={{\n            width: \"100%\",\n            height: \"300px\",\n            fontFamily: \"monospace\",\n            fontSize: \"14px\",\n            marginTop: \"20px\",\n            whiteSpace: \"pre\",\n            backgroundColor: \"rgba(0, 0, 0, 0.1)\",\n            color: \"white\",\n          }}\n        />\n      </pre>\n    </div>\n  );\n}\n\nexport default CodeOutput;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,iBAAiB,MAAM,0BAA0B;AACxD,SAASC,QAAQ,QAAQ,+CAA+C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzE,SAASC,UAAUA,CAAC;EAAEC,IAAI;EAAEC,QAAQ;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EACnD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMY,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAI,CAACC,SAAS,CAACC,SAAS,EAAE;MACxBC,KAAK,CAAC,6BAA6B,CAAC;MACpC;IACF;IACAF,SAAS,CAACC,SAAS,CAChBE,SAAS,CAACV,IAAI,CAAC,CACfW,IAAI,CAAC,MAAM;MACVN,SAAS,CAAC,IAAI,CAAC;MACfO,UAAU,CAAC,MAAMP,SAAS,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC;IACzC,CAAC,CAAC,CACDQ,KAAK,CAAC,MAAM;MACXJ,KAAK,CAAC,QAAQ,CAAC;IACjB,CAAC,CAAC;EACN,CAAC;EAED,oBACEX,OAAA;IAAKgB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBjB,OAAA;MACEkB,OAAO,EAAEV,UAAW;MACpBW,KAAK,EAAE;QACLC,QAAQ,EAAE,UAAU;QACpBC,GAAG,EAAE,GAAG;QACRC,KAAK,EAAE,EAAE;QACTC,OAAO,EAAE,SAAS;QAClBC,QAAQ,EAAE,QAAQ;QAClBC,MAAM,EAAE,SAAS;QACjBC,YAAY,EAAE,KAAK;QACnBC,MAAM,EAAE,MAAM;QACdC,eAAe,EAAEtB,MAAM,GAAG,OAAO,GAAG,SAAS;QAC7CuB,KAAK,EAAE,OAAO;QACdC,UAAU,EAAE,MAAM;QAClBC,MAAM,EAAE;MACV,CAAE;MAAAd,QAAA,EAEDX,MAAM,GAAG,MAAM,GAAG;IAAwB;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,eAETnC,OAAA;MACEmB,KAAK,EAAE;QACLiB,UAAU,EAAE,UAAU;QACtBN,UAAU,EAAE,MAAM;QAClBN,QAAQ,EAAE,QAAQ;QAClBI,eAAe,EAAE;MACnB,CAAE;MAAAX,QAAA,gBAEFjB,OAAA,CAACH,iBAAiB;QAChBwC,QAAQ,EAAC,GAAG;QACZlB,KAAK,EAAErB,QAAS;QAChBwC,SAAS,EAAE,IAAK;QAChBC,eAAe,EAAE,IAAK;QAAAtB,QAAA,EAErBf;MAAI;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACY,CAAC,eAEpBnC,OAAA;QAAAiB,QAAA,EAAG;MAGH;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJnC,OAAA;QACEwC,KAAK,EAAErC,QAAS;QAChBsC,QAAQ,EAAGC,CAAC,IAAKtC,WAAW,CAACsC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC7CrB,KAAK,EAAE;UACLyB,KAAK,EAAE,MAAM;UACbC,MAAM,EAAE,OAAO;UACfC,UAAU,EAAE,WAAW;UACvBtB,QAAQ,EAAE,MAAM;UAChBuB,SAAS,EAAE,MAAM;UACjBX,UAAU,EAAE,KAAK;UACjBR,eAAe,EAAE,oBAAoB;UACrCC,KAAK,EAAE;QACT;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC9B,EAAA,CA/EQJ,UAAU;AAAA+C,EAAA,GAAV/C,UAAU;AAiFnB,eAAeA,UAAU;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
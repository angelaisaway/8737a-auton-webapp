{"ast":null,"code":"function generateEZTemplateAuton(points) {\n  let codeLines = [];\n  codeLines.push(\"// EZ-Template Auton Path\");\n  codeLines.push(\"chassis.pid_odom_behavior_set(ez::shortest);\");\n  codeLines.push(\"chassis.slew_drive_constants_set(distance, limited_speed)\");\n  codeLines.push(\"\");\n  points.forEach((point, i) => {\n    var _points$i;\n    const x = odom_x_flip(point.x);\n    const y = odom_y_flip(point.y);\n    const heading = odom_theta_flip(point.heading);\n    const {\n      \"intake how many blocks?\": intake,\n      \"outtake how many blocks?\": outtake,\n      \"stop here for (ms)\": wait,\n      slew,\n      \"toggle outtaking piston\": piston,\n      \"dir get to this point?\": direction\n    } = (_points$i = points[i]) !== null && _points$i !== void 0 ? _points$i : {};\n    if (i === 0) {\n      codeLines.push(`//starting pos:`);\n      codeLines.push(`chassis.odom_xyt_set(${x} , ${y}, ${heading});`);\n      codeLines.push(``);\n    } else {\n      codeLines.push(`  // Move to point ${i + 1}`);\n      codeLines.push(`chassis.pid_odom_set({{ ${x} , ${y} }, ${direction}, ${heading}}, ${slew});`);\n    }\n    if (wait > 0) {\n      codeLines.push(`//stop and wait here for ${wait} ms`);\n    }\n    if (intake > 0) {\n      codeLines.push(`//intake ${intake} blocks`);\n    }\n    if (outtake > 0) {\n      codeLines.push(`//outtake ${outtake} blocks`);\n    }\n    if (piston !== null) {\n      codeLines.push(`//set the piston controlling outtake height to ${piston}`);\n    }\n    codeLines.push(``);\n  });\n  codeLines.push(\"chassis.pid_wait(); }\");\n  return codeLines.join(\"\\n\");\n}\nexport { generateEZTemplateAuton };","map":{"version":3,"names":["generateEZTemplateAuton","points","codeLines","push","forEach","point","i","_points$i","x","odom_x_flip","y","odom_y_flip","heading","odom_theta_flip","intake","outtake","wait","slew","piston","direction","join"],"sources":["/Users/angelajiang/vex-auton-tool2/src/utils/ezlogic.js"],"sourcesContent":["function generateEZTemplateAuton(points) {\n  let codeLines = [];\n  codeLines.push(\"// EZ-Template Auton Path\");\n  codeLines.push(\"chassis.pid_odom_behavior_set(ez::shortest);\");\n  codeLines.push(\"chassis.slew_drive_constants_set(distance, limited_speed)\");\n  codeLines.push(\"\");\n\n  points.forEach((point, i) => {\n    const x = odom_x_flip(point.x);\n    const y = odom_y_flip(point.y);\n    const heading = odom_theta_flip(point.heading);\n    const {\n      \"intake how many blocks?\": intake,\n      \"outtake how many blocks?\": outtake,\n      \"stop here for (ms)\": wait,\n      slew,\n      \"toggle outtaking piston\": piston,\n\n      \"dir get to this point?\": direction,\n    } = points[i] ?? {};\n\n    if (i === 0) {\n      codeLines.push(`//starting pos:`);\n      codeLines.push(`chassis.odom_xyt_set(${x} , ${y}, ${heading});`);\n      codeLines.push(``);\n    } else {\n      codeLines.push(`  // Move to point ${i + 1}`);\n      codeLines.push(\n        `chassis.pid_odom_set({{ ${x} , ${y} }, ${direction}, ${heading}}, ${slew});`\n      );\n    }\n\n    if (wait > 0) {\n      codeLines.push(`//stop and wait here for ${wait} ms`);\n    }\n    if (intake > 0) {\n      codeLines.push(`//intake ${intake} blocks`);\n    }\n    if (outtake > 0) {\n      codeLines.push(`//outtake ${outtake} blocks`);\n    }\n\n    if (piston !== null) {\n      codeLines.push(\n        `//set the piston controlling outtake height to ${piston}`\n      );\n    }\n\n    codeLines.push(``);\n  });\n\n  codeLines.push(\"chassis.pid_wait(); }\");\n\n  return codeLines.join(\"\\n\");\n}\n\nexport { generateEZTemplateAuton };\n"],"mappings":"AAAA,SAASA,uBAAuBA,CAACC,MAAM,EAAE;EACvC,IAAIC,SAAS,GAAG,EAAE;EAClBA,SAAS,CAACC,IAAI,CAAC,2BAA2B,CAAC;EAC3CD,SAAS,CAACC,IAAI,CAAC,8CAA8C,CAAC;EAC9DD,SAAS,CAACC,IAAI,CAAC,2DAA2D,CAAC;EAC3ED,SAAS,CAACC,IAAI,CAAC,EAAE,CAAC;EAElBF,MAAM,CAACG,OAAO,CAAC,CAACC,KAAK,EAAEC,CAAC,KAAK;IAAA,IAAAC,SAAA;IAC3B,MAAMC,CAAC,GAAGC,WAAW,CAACJ,KAAK,CAACG,CAAC,CAAC;IAC9B,MAAME,CAAC,GAAGC,WAAW,CAACN,KAAK,CAACK,CAAC,CAAC;IAC9B,MAAME,OAAO,GAAGC,eAAe,CAACR,KAAK,CAACO,OAAO,CAAC;IAC9C,MAAM;MACJ,yBAAyB,EAAEE,MAAM;MACjC,0BAA0B,EAAEC,OAAO;MACnC,oBAAoB,EAAEC,IAAI;MAC1BC,IAAI;MACJ,yBAAyB,EAAEC,MAAM;MAEjC,wBAAwB,EAAEC;IAC5B,CAAC,IAAAZ,SAAA,GAAGN,MAAM,CAACK,CAAC,CAAC,cAAAC,SAAA,cAAAA,SAAA,GAAI,CAAC,CAAC;IAEnB,IAAID,CAAC,KAAK,CAAC,EAAE;MACXJ,SAAS,CAACC,IAAI,CAAC,iBAAiB,CAAC;MACjCD,SAAS,CAACC,IAAI,CAAC,wBAAwBK,CAAC,MAAME,CAAC,KAAKE,OAAO,IAAI,CAAC;MAChEV,SAAS,CAACC,IAAI,CAAC,EAAE,CAAC;IACpB,CAAC,MAAM;MACLD,SAAS,CAACC,IAAI,CAAC,sBAAsBG,CAAC,GAAG,CAAC,EAAE,CAAC;MAC7CJ,SAAS,CAACC,IAAI,CACZ,2BAA2BK,CAAC,MAAME,CAAC,OAAOS,SAAS,KAAKP,OAAO,MAAMK,IAAI,IAC3E,CAAC;IACH;IAEA,IAAID,IAAI,GAAG,CAAC,EAAE;MACZd,SAAS,CAACC,IAAI,CAAC,4BAA4Ba,IAAI,KAAK,CAAC;IACvD;IACA,IAAIF,MAAM,GAAG,CAAC,EAAE;MACdZ,SAAS,CAACC,IAAI,CAAC,YAAYW,MAAM,SAAS,CAAC;IAC7C;IACA,IAAIC,OAAO,GAAG,CAAC,EAAE;MACfb,SAAS,CAACC,IAAI,CAAC,aAAaY,OAAO,SAAS,CAAC;IAC/C;IAEA,IAAIG,MAAM,KAAK,IAAI,EAAE;MACnBhB,SAAS,CAACC,IAAI,CACZ,kDAAkDe,MAAM,EAC1D,CAAC;IACH;IAEAhB,SAAS,CAACC,IAAI,CAAC,EAAE,CAAC;EACpB,CAAC,CAAC;EAEFD,SAAS,CAACC,IAAI,CAAC,uBAAuB,CAAC;EAEvC,OAAOD,SAAS,CAACkB,IAAI,CAAC,IAAI,CAAC;AAC7B;AAEA,SAASpB,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"function generateEZTemplateAuton(points) {\n  let codeLines = [];\n  codeLines.push(\"// EZ-Template Auton Path\");\n  points.forEach((point, i) => {\n    const x = point.x;\n    const y = point.y;\n    const heading = point.heading;\n    if (i === 0) codeLines.push(`chassis.odom_xyt_set(${x} , ${y}, ${heading});`);else if (point.direction === \"fwd\") {\n      codeLines.push(`  // Move to point ${i + 1}`);\n      codeLines.push(`chassis.pid_odom_set({{ ${x} , ${y} }, fwd, ${heading}});`);\n    } else {\n      codeLines.push(`  // Move to point ${i + 1}`);\n      codeLines.push(`chassis.pid_odom_set({{ ${x} , ${y} }, rev, ${heading}});`);\n    }\n  });\n  if (defaultActions().intakeTime != 0) {\n    codeLines.push(`intakeMotor.moveFor( ${defaultActions().intakeTime}, dir: 1)})`);\n  }\n  if (defaultActions().intakeTime != 0) {\n    codeLines.push(`intakeMotor.moveFor( ${defaultActions().intakeTime}, dir: -1)})`);\n  }\n  codeLines.push(\"chassis.pid_wait(); }\");\n  return codeLines.join(\"\\n\");\n}\nexport { generateEZTemplateAuton };","map":{"version":3,"names":["generateEZTemplateAuton","points","codeLines","push","forEach","point","i","x","y","heading","direction","defaultActions","intakeTime","join"],"sources":["/Users/angelajiang/vex-auton-tool2/src/components/ezlogic.js"],"sourcesContent":["function generateEZTemplateAuton(points) {\n  let codeLines = [];\n  codeLines.push(\"// EZ-Template Auton Path\");\n\n  points.forEach((point, i) => {\n    const x = point.x;\n    const y = point.y;\n    const heading = point.heading;\n\n    if (i === 0)\n      codeLines.push(`chassis.odom_xyt_set(${x} , ${y}, ${heading});`);\n    else if (point.direction === \"fwd\") {\n      codeLines.push(`  // Move to point ${i + 1}`);\n      codeLines.push(\n        `chassis.pid_odom_set({{ ${x} , ${y} }, fwd, ${heading}});`\n      );\n    } else {\n      codeLines.push(`  // Move to point ${i + 1}`);\n      codeLines.push(\n        `chassis.pid_odom_set({{ ${x} , ${y} }, rev, ${heading}});`\n      );\n    }\n  });\n\n  if (defaultActions().intakeTime != 0) {\n    codeLines.push(\n      `intakeMotor.moveFor( ${defaultActions().intakeTime}, dir: 1)})`\n    );\n  }\n  if (defaultActions().intakeTime != 0) {\n    codeLines.push(\n      `intakeMotor.moveFor( ${defaultActions().intakeTime}, dir: -1)})`\n    );\n  }\n\n  codeLines.push(\"chassis.pid_wait(); }\");\n\n  return codeLines.join(\"\\n\");\n}\n\nexport { generateEZTemplateAuton };\n"],"mappings":"AAAA,SAASA,uBAAuBA,CAACC,MAAM,EAAE;EACvC,IAAIC,SAAS,GAAG,EAAE;EAClBA,SAAS,CAACC,IAAI,CAAC,2BAA2B,CAAC;EAE3CF,MAAM,CAACG,OAAO,CAAC,CAACC,KAAK,EAAEC,CAAC,KAAK;IAC3B,MAAMC,CAAC,GAAGF,KAAK,CAACE,CAAC;IACjB,MAAMC,CAAC,GAAGH,KAAK,CAACG,CAAC;IACjB,MAAMC,OAAO,GAAGJ,KAAK,CAACI,OAAO;IAE7B,IAAIH,CAAC,KAAK,CAAC,EACTJ,SAAS,CAACC,IAAI,CAAC,wBAAwBI,CAAC,MAAMC,CAAC,KAAKC,OAAO,IAAI,CAAC,CAAC,KAC9D,IAAIJ,KAAK,CAACK,SAAS,KAAK,KAAK,EAAE;MAClCR,SAAS,CAACC,IAAI,CAAC,sBAAsBG,CAAC,GAAG,CAAC,EAAE,CAAC;MAC7CJ,SAAS,CAACC,IAAI,CACZ,2BAA2BI,CAAC,MAAMC,CAAC,YAAYC,OAAO,KACxD,CAAC;IACH,CAAC,MAAM;MACLP,SAAS,CAACC,IAAI,CAAC,sBAAsBG,CAAC,GAAG,CAAC,EAAE,CAAC;MAC7CJ,SAAS,CAACC,IAAI,CACZ,2BAA2BI,CAAC,MAAMC,CAAC,YAAYC,OAAO,KACxD,CAAC;IACH;EACF,CAAC,CAAC;EAEF,IAAIE,cAAc,CAAC,CAAC,CAACC,UAAU,IAAI,CAAC,EAAE;IACpCV,SAAS,CAACC,IAAI,CACZ,wBAAwBQ,cAAc,CAAC,CAAC,CAACC,UAAU,aACrD,CAAC;EACH;EACA,IAAID,cAAc,CAAC,CAAC,CAACC,UAAU,IAAI,CAAC,EAAE;IACpCV,SAAS,CAACC,IAAI,CACZ,wBAAwBQ,cAAc,CAAC,CAAC,CAACC,UAAU,cACrD,CAAC;EACH;EAEAV,SAAS,CAACC,IAAI,CAAC,uBAAuB,CAAC;EAEvC,OAAOD,SAAS,CAACW,IAAI,CAAC,IAAI,CAAC;AAC7B;AAEA,SAASb,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
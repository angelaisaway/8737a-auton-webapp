{"ast":null,"code":"function generateEZTemplateAuton(points) {\n  let codeLines = [];\n  codeLines.push(\"// EZ-Template Auton Path\");\n  codeLines.push(\"chassis.pid_odom_behavior_set(ez::shortest);\");\n  chassis.slew_drive_constants_set(distance, limited_speed);\n  codeLines.push(\"\");\n  points.forEach((point, i) => {\n    var _points$i;\n    const x = point.x;\n    const y = point.y;\n    const heading = point.heading;\n    const actions = point.actions;\n    const {\n      \"intake how many blocks?\": intake,\n      \"outtake how many blocks?\": outtake,\n      \"stop here for (ms)\": wait,\n      slew,\n      \"toggle outtaking piston\": piston,\n      \"dir to next point?\": direction\n    } = (_points$i = points[i]) !== null && _points$i !== void 0 ? _points$i : {};\n    if (i === 0) {\n      codeLines.push(`//starting pos:`);\n      codeLines.push(`chassis.odom_xyt_set(${x} , ${y}, ${heading});`);\n      codeLines.push(``);\n    } else {\n      codeLines.push(`  // Move to point ${i + 1}`);\n      codeLines.push(`chassis.pid_odom_set({{ ${x} , ${y} }, ${direction}, ${heading}}, ${slew});`);\n    }\n\n    //if (defaultActions().)\n  });\n  codeLines.push(\"chassis.pid_wait(); }\");\n  return codeLines.join(\"\\n\");\n}\nexport { generateEZTemplateAuton };","map":{"version":3,"names":["generateEZTemplateAuton","points","codeLines","push","chassis","slew_drive_constants_set","distance","limited_speed","forEach","point","i","_points$i","x","y","heading","actions","intake","outtake","wait","slew","piston","direction","join"],"sources":["/Users/angelajiang/vex-auton-tool2/src/utils/ezlogic.js"],"sourcesContent":["function generateEZTemplateAuton(points) {\n  let codeLines = [];\n  codeLines.push(\"// EZ-Template Auton Path\");\n  codeLines.push(\"chassis.pid_odom_behavior_set(ez::shortest);\");\n  chassis.slew_drive_constants_set(distance, limited_speed);\n  codeLines.push(\"\");\n\n  points.forEach((point, i) => {\n    const x = point.x;\n    const y = point.y;\n    const heading = point.heading;\n    const actions = point.actions;\n    const {\n      \"intake how many blocks?\": intake,\n      \"outtake how many blocks?\": outtake,\n      \"stop here for (ms)\": wait,\n      slew,\n      \"toggle outtaking piston\": piston,\n\n      \"dir to next point?\": direction,\n    } = points[i] ?? {};\n\n    if (i === 0) {\n      codeLines.push(`//starting pos:`);\n      codeLines.push(`chassis.odom_xyt_set(${x} , ${y}, ${heading});`);\n      codeLines.push(``);\n    } else {\n      codeLines.push(`  // Move to point ${i + 1}`);\n      codeLines.push(\n        `chassis.pid_odom_set({{ ${x} , ${y} }, ${direction}, ${heading}}, ${slew});`\n      );\n    }\n\n    //if (defaultActions().)\n  });\n\n  codeLines.push(\"chassis.pid_wait(); }\");\n\n  return codeLines.join(\"\\n\");\n}\n\nexport { generateEZTemplateAuton };\n"],"mappings":"AAAA,SAASA,uBAAuBA,CAACC,MAAM,EAAE;EACvC,IAAIC,SAAS,GAAG,EAAE;EAClBA,SAAS,CAACC,IAAI,CAAC,2BAA2B,CAAC;EAC3CD,SAAS,CAACC,IAAI,CAAC,8CAA8C,CAAC;EAC9DC,OAAO,CAACC,wBAAwB,CAACC,QAAQ,EAAEC,aAAa,CAAC;EACzDL,SAAS,CAACC,IAAI,CAAC,EAAE,CAAC;EAElBF,MAAM,CAACO,OAAO,CAAC,CAACC,KAAK,EAAEC,CAAC,KAAK;IAAA,IAAAC,SAAA;IAC3B,MAAMC,CAAC,GAAGH,KAAK,CAACG,CAAC;IACjB,MAAMC,CAAC,GAAGJ,KAAK,CAACI,CAAC;IACjB,MAAMC,OAAO,GAAGL,KAAK,CAACK,OAAO;IAC7B,MAAMC,OAAO,GAAGN,KAAK,CAACM,OAAO;IAC7B,MAAM;MACJ,yBAAyB,EAAEC,MAAM;MACjC,0BAA0B,EAAEC,OAAO;MACnC,oBAAoB,EAAEC,IAAI;MAC1BC,IAAI;MACJ,yBAAyB,EAAEC,MAAM;MAEjC,oBAAoB,EAAEC;IACxB,CAAC,IAAAV,SAAA,GAAGV,MAAM,CAACS,CAAC,CAAC,cAAAC,SAAA,cAAAA,SAAA,GAAI,CAAC,CAAC;IAEnB,IAAID,CAAC,KAAK,CAAC,EAAE;MACXR,SAAS,CAACC,IAAI,CAAC,iBAAiB,CAAC;MACjCD,SAAS,CAACC,IAAI,CAAC,wBAAwBS,CAAC,MAAMC,CAAC,KAAKC,OAAO,IAAI,CAAC;MAChEZ,SAAS,CAACC,IAAI,CAAC,EAAE,CAAC;IACpB,CAAC,MAAM;MACLD,SAAS,CAACC,IAAI,CAAC,sBAAsBO,CAAC,GAAG,CAAC,EAAE,CAAC;MAC7CR,SAAS,CAACC,IAAI,CACZ,2BAA2BS,CAAC,MAAMC,CAAC,OAAOQ,SAAS,KAAKP,OAAO,MAAMK,IAAI,IAC3E,CAAC;IACH;;IAEA;EACF,CAAC,CAAC;EAEFjB,SAAS,CAACC,IAAI,CAAC,uBAAuB,CAAC;EAEvC,OAAOD,SAAS,CAACoB,IAAI,CAAC,IAAI,CAAC;AAC7B;AAEA,SAAStB,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import rotation from \"../App.js\";\nimport offsets from \"../App.js\";\nconst fieldSizeInches = 144;\nconst fieldImagePixels = 600;\nconst scale = fieldSizeInches / fieldImagePixels;\nconst styles = {\n  container: {\n    position: \"relative\",\n    display: \"inline-block\",\n    width: 600,\n    height: 600,\n    userSelect: \"none\"\n  },\n  image: {\n    width: 600,\n    height: 600,\n    transform: `rotate(${rotation}deg)`,\n    transition: \"transform 0.3s ease\",\n    pointerEvents: \"none\",\n    userSelect: \"none\"\n  },\n  pathlines: {\n    width: 600,\n    height: 600,\n    position: \"absolute\",\n    inset: 0,\n    pointerEvents: \"none\",\n    zIndex: 0\n  },\n  robotSizing: {\n    /* robot placeholder rectangle dims */\n    boxW: (offsets.left + offsets.right) / scale,\n    boxH: (offsets.front + offsets.back) / scale,\n    top: pt.rawY - boxH / 2 + (offsets.front - offsets.back) / (2 * scale),\n    left: pt.rawX - boxW / 2 + (offsets.right - offsets.left) / (2 * scale)\n  }\n};\nexport default styles;","map":{"version":3,"names":["rotation","offsets","fieldSizeInches","fieldImagePixels","scale","styles","container","position","display","width","height","userSelect","image","transform","transition","pointerEvents","pathlines","inset","zIndex","robotSizing","boxW","left","right","boxH","front","back","top","pt","rawY","rawX"],"sources":["/Users/angelajiang/vex-auton-tool2/src/utils/styling.js"],"sourcesContent":["import rotation from \"../App.js\";\nimport offsets from \"../App.js\";\nconst fieldSizeInches = 144;\nconst fieldImagePixels = 600;\nconst scale = fieldSizeInches / fieldImagePixels;\n\nconst styles = {\n  container: {\n    position: \"relative\",\n    display: \"inline-block\",\n    width: 600,\n    height: 600,\n    userSelect: \"none\",\n  },\n\n  image: {\n    width: 600,\n    height: 600,\n    transform: `rotate(${rotation}deg)`,\n    transition: \"transform 0.3s ease\",\n    pointerEvents: \"none\",\n    userSelect: \"none\",\n  },\n\n  pathlines: {\n    width: 600,\n    height: 600,\n    position: \"absolute\",\n    inset: 0,\n    pointerEvents: \"none\",\n    zIndex: 0,\n  },\n\n  robotSizing: {\n    /* robot placeholder rectangle dims */\n    boxW: (offsets.left + offsets.right) / scale,\n    boxH: (offsets.front + offsets.back) / scale,\n    top: pt.rawY - boxH / 2 + (offsets.front - offsets.back) / (2 * scale),\n    left: pt.rawX - boxW / 2 + (offsets.right - offsets.left) / (2 * scale),\n  },\n};\n\nexport default styles;\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,WAAW;AAChC,OAAOC,OAAO,MAAM,WAAW;AAC/B,MAAMC,eAAe,GAAG,GAAG;AAC3B,MAAMC,gBAAgB,GAAG,GAAG;AAC5B,MAAMC,KAAK,GAAGF,eAAe,GAAGC,gBAAgB;AAEhD,MAAME,MAAM,GAAG;EACbC,SAAS,EAAE;IACTC,QAAQ,EAAE,UAAU;IACpBC,OAAO,EAAE,cAAc;IACvBC,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,GAAG;IACXC,UAAU,EAAE;EACd,CAAC;EAEDC,KAAK,EAAE;IACLH,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,GAAG;IACXG,SAAS,EAAE,UAAUb,QAAQ,MAAM;IACnCc,UAAU,EAAE,qBAAqB;IACjCC,aAAa,EAAE,MAAM;IACrBJ,UAAU,EAAE;EACd,CAAC;EAEDK,SAAS,EAAE;IACTP,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,GAAG;IACXH,QAAQ,EAAE,UAAU;IACpBU,KAAK,EAAE,CAAC;IACRF,aAAa,EAAE,MAAM;IACrBG,MAAM,EAAE;EACV,CAAC;EAEDC,WAAW,EAAE;IACX;IACAC,IAAI,EAAE,CAACnB,OAAO,CAACoB,IAAI,GAAGpB,OAAO,CAACqB,KAAK,IAAIlB,KAAK;IAC5CmB,IAAI,EAAE,CAACtB,OAAO,CAACuB,KAAK,GAAGvB,OAAO,CAACwB,IAAI,IAAIrB,KAAK;IAC5CsB,GAAG,EAAEC,EAAE,CAACC,IAAI,GAAGL,IAAI,GAAG,CAAC,GAAG,CAACtB,OAAO,CAACuB,KAAK,GAAGvB,OAAO,CAACwB,IAAI,KAAK,CAAC,GAAGrB,KAAK,CAAC;IACtEiB,IAAI,EAAEM,EAAE,CAACE,IAAI,GAAGT,IAAI,GAAG,CAAC,GAAG,CAACnB,OAAO,CAACqB,KAAK,GAAGrB,OAAO,CAACoB,IAAI,KAAK,CAAC,GAAGjB,KAAK;EACxE;AACF,CAAC;AAED,eAAeC,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}